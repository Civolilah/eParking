// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartRestaurant.WebAPI;

namespace eParking.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20211015145307_2")]
    partial class _2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eParking.Database.Drzave", b =>
                {
                    b.Property<int>("DrzavaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skracenica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrzavaID");

                    b.ToTable("Drzave");
                });

            modelBuilder.Entity("eParking.Database.Gradovi", b =>
                {
                    b.Property<int>("GradID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skracenica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradID");

                    b.HasIndex("DrzavaID");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("eParking.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivKorisnika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnikID");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("eParking.Database.KorisnikUloga", b =>
                {
                    b.Property<int>("KorisnikUlogaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("UlogaID")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("UlogaID");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("eParking.Database.ParkingMjesta", b =>
                {
                    b.Property<int>("ParkingMjestoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParkingMjestoID");

                    b.ToTable("ParkingMjesta");
                });

            modelBuilder.Entity("eParking.Database.ParkingParkingMjesto", b =>
                {
                    b.Property<int>("TipParkingMjestaParkingMjestoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ParkingID")
                        .HasColumnType("int");

                    b.Property<int>("ParkingMjestoID")
                        .HasColumnType("int");

                    b.HasKey("TipParkingMjestaParkingMjestoID");

                    b.HasIndex("ParkingID");

                    b.HasIndex("ParkingMjestoID");

                    b.ToTable("ParkingParkingMjesta");
                });

            modelBuilder.Entity("eParking.Database.Parkinzi", b =>
                {
                    b.Property<int>("ParkingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RadnoVrijeme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XKoordinata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YKoordinata")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParkingID");

                    b.HasIndex("GradID");

                    b.ToTable("Parkinzi");
                });

            modelBuilder.Entity("eParking.Database.TipParkingMijesta", b =>
                {
                    b.Property<int>("TipParkingMjestaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipParkingMjestaID");

                    b.ToTable("TipParkingMijesta");
                });

            modelBuilder.Entity("eParking.Database.TipParkingMjestaParkingMjesto", b =>
                {
                    b.Property<int>("TipParkingMjestaParkingMjestoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ParkingMjestoID")
                        .HasColumnType("int");

                    b.Property<int>("TipParkingMjestaID")
                        .HasColumnType("int");

                    b.HasKey("TipParkingMjestaParkingMjestoID");

                    b.HasIndex("ParkingMjestoID");

                    b.HasIndex("TipParkingMjestaID");

                    b.ToTable("TipParkingMjestaParkingMjesta");
                });

            modelBuilder.Entity("eParking.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaID");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("eParking.Database.Gradovi", b =>
                {
                    b.HasOne("eParking.Database.Drzave", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("eParking.Database.KorisnikUloga", b =>
                {
                    b.HasOne("eParking.Database.Korisnici", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eParking.Database.Uloge", "Uloga")
                        .WithMany()
                        .HasForeignKey("UlogaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("eParking.Database.ParkingParkingMjesto", b =>
                {
                    b.HasOne("eParking.Database.Parkinzi", "Parking")
                        .WithMany()
                        .HasForeignKey("ParkingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eParking.Database.ParkingMjesta", "ParkingMjesto")
                        .WithMany()
                        .HasForeignKey("ParkingMjestoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parking");

                    b.Navigation("ParkingMjesto");
                });

            modelBuilder.Entity("eParking.Database.Parkinzi", b =>
                {
                    b.HasOne("eParking.Database.Gradovi", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("eParking.Database.TipParkingMjestaParkingMjesto", b =>
                {
                    b.HasOne("eParking.Database.ParkingMjesta", "ParkingMjesto")
                        .WithMany()
                        .HasForeignKey("ParkingMjestoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eParking.Database.TipParkingMijesta", "Tip")
                        .WithMany()
                        .HasForeignKey("TipParkingMjestaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParkingMjesto");

                    b.Navigation("Tip");
                });
#pragma warning restore 612, 618
        }
    }
}
